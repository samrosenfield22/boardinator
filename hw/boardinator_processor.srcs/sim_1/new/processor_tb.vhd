----------------------------------------------------------------------------------
--------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
use IEEE.NUMERIC_STD.ALL;

--use work.simple.all;

entity processor_tb is
--  Port ( );
end processor_tb;

architecture Behavioral of processor_tb is
    component processor
    Port ( temporary_processor_instr_input : in STD_LOGIC_VECTOR(15 downto 0);  --delet
           clk : in STD_LOGIC;
           ext_rst : in STD_LOGIC;
           pc_out : out STD_LOGIC_VECTOR (9 downto 0));
    end component;
    
    signal instr_input : STD_LOGIC_VECTOR(15 downto 0) := (others => '0');
    signal clk : std_logic := '0';
    signal ext_rst: std_logic := '1';
    signal pc: std_logic_vector(9 downto 0) := "0000000000";
    
    type prog_mem_t is array (999 downto 0) of std_logic_vector(15 downto 0);
    signal prog_rom: prog_mem_t :=
    (    
    			0 => "0000001000000001",		--	set 	r2,1
		1 => "1010000010000010",		--	getmem 	r0,r2,2
		2 => "0000001100000000",		--	set 	r3,0	
		3 => "0101101100000000",		--	cmp 	r3,r0
		4 => "0111000000001001",		--	jeq 	main
		5 => "0000001100000001",		--	set 	r3,1	
		6 => "0101101100000000",		--	cmp 	r3,r0
		7 => "0111000000001001",		--	jeq 	main
		8 => "0110100000001000",		--	jmp 	bad_reset
		9 => "0000000000000101",		--	set		r0,5
		10 => "1001111000000000",		--	setmem r6,r0,0
		11 => "0001111000000001",		-- addl r6,1
		12 => "1010110100000000",		--	getpcl r5
		13 => "1011010000000000",		-- getpch r4
		14 => "0001110100001011",		--  addl r5,11
		15 => "1001000000010001",		-- jovf inc_upper_mangled_tempfile3.asm_24
		16 => "0110100000010010",		--  jmp pushret_mangled_tempfile3.asm_24
		17 => "0001110000000001",		-- addl r4,1
		18 => "1001111000000100",		-- setmem r6,r4,0
		19 => "0001111000000001",		-- addl r6,1
		20 => "1001111000000101",		-- setmem r6,r5,0
		21 => "0001111000000001",		-- addl r6,1
		22 => "0110100000011101",		-- jmp factorial
		23 => "0010111000000001",		--	subl	r6,1
		24 => "1111111000000000",		--	set 	r2,0
		25 => "0000001110000000",		--	set 	r3,0x80
		26 => "1001101010000011",		--	setmem	r2,r3,2
		27 => "0001100000000000",		--	addl r0,0
		28 => "0110100000011100",		--	jmp		end
		29 => "1001111000000111",		--	setmem r6,r7,0
		30 => "0001111000000001",		-- addl r6,1
		31 => "0000111100000110",		-- mov r7,r6
		32 => "1001111000000010",		--	setmem r6,r2,0
		33 => "0001111000000001",		-- addl r6,1
		34 => "1001111000000011",		--	setmem r6,r3,0
		35 => "0001111000000001",		-- addl r6,1
		36 => "0010111100000000",		--	subl r7,0
		37 => "0010111100000100",		-- subl r7,4
		38 => "1010001000000111",		-- getmem 	r2,r7,0
		39 => "0001111100000100",		-- addl r7,4
		40 => "0001111100000000",		-- addl r7,0
		41 => "0000001100000001",		--	set		r3,1
		42 => "0000010000000001",		--	set		r4,1
		43 => "0101101000000100",		--	cmp		r2,r4
		44 => "0111000001000000",		--	jeq		factorial_exit
		45 => "1001111000000011",		--	setmem r6,r3,0
		46 => "0001111000000001",		-- addl r6,1
		47 => "1001111000000010",		--	setmem r6,r2,0
		48 => "0001111000000001",		-- addl r6,1
		49 => "1010110100000000",		--	getpcl r5
		50 => "1011010000000000",		-- getpch r4
		51 => "0001110100001011",		--  addl r5,11
		52 => "1001000000110110",		-- jovf inc_upper_mangled_tempfile3.asm_56
		53 => "0110100000110111",		--  jmp pushret_mangled_tempfile3.asm_56
		54 => "0001110000000001",		-- addl r4,1
		55 => "1001111000000100",		-- setmem r6,r4,0
		56 => "0001111000000001",		-- addl r6,1
		57 => "1001111000000101",		-- setmem r6,r5,0
		58 => "0001111000000001",		-- addl r6,1
		59 => "0110100010110000",		-- jmp mult8
		60 => "0010111000000010",		--	subl	r6,2
		61 => "0000101100000001",		--	mov		r3,r1
		62 => "0010101000000001",		--	subl	r2,1
		63 => "0110100000101010",		--	jmp		factorial_loop
		64 => "0000100000000011",		--	mov		r0,r3
		65 => "0010111000000001",		--	subl r6,1
		66 => "1010001100000110",		-- getmem 	r3,r6,0
		67 => "0010111000000001",		--	subl r6,1
		68 => "1010001000000110",		-- getmem 	r2,r6,0
		69 => "0000111000000111",		--	mov r6,r7
		70 => "0010111000000001",		-- subl r6,1
		71 => "1010011100000110",		-- getmem r7,r6,0
		72 => "0010111000000001",		--	subl r6,1
		73 => "1010010100000110",		-- getmem r5,r6,0
		74 => "0010111000000001",		-- subl r6,1
		75 => "1010010000000110",		-- getmem r4,r6,0
		76 => "1011110000000101",		-- setpc r4,r5
		77 => "1001111000000111",		--	setmem r6,r7,0
		78 => "0001111000000001",		-- addl r6,1
		79 => "0000111100000110",		-- mov r7,r6
		80 => "1001111000000011",		--	setmem r6,	r3,0
		81 => "0001111000000001",		-- addl r6,1
		82 => "0010111100000000",		--	subl r7,0	
		83 => "0010111100000100",		-- subl r7,4
		84 => "1010000000000111",		-- getmem r0,r7,0
		85 => "0001111100000100",		-- addl r7,4
		86 => "0001111100000000",		-- addl r7,0		
		87 => "0010111100000001",		--	subl r7,1	
		88 => "0010111100000100",		-- subl r7,4
		89 => "1010000100000111",		-- getmem r1,r7,0
		90 => "0001111100000100",		-- addl r7,4
		91 => "0001111100000001",		-- addl r7,1		
		92 => "0010111100000011",		--	subl r7,3	
		93 => "0010111100000100",		-- subl r7,4
		94 => "1010001000000111",		-- getmem r2,r7,0
		95 => "0001111100000100",		-- addl r7,4
		96 => "0001111100000011",		-- addl r7,3		
		97 => "0010111100000010",		--	subl r7,2	
		98 => "0010111100000100",		-- subl r7,4
		99 => "1010001100000111",		-- getmem r3,r7,0
		100 => "0001111100000100",		-- addl r7,4
		101 => "0001111100000010",		-- addl r7,2		
		102 => "0001000100000010",		--	add 	r1,r2
		103 => "1001000001101001",		--	jovf	add16_lo_ovflw
		104 => "0110100001101101",		--	jmp 	add16_add_hi_bytes
		105 => "0001100000000001",		--	addl 	r0,1
		106 => "1001000001101100",		--	jovf	add16_hi_ovflw_1
		107 => "0110100001101101",		--	jmp 	add16_add_hi_bytes
		108 => "0000001000000001",		--	set 	r2,1
		109 => "0001000000000011",		--	add 	r0,r3
		110 => "1001000001110001",		--	jovf	add16_hi_ovflw_2
		111 => "0000001000000000",		--	set 	r2,0
		112 => "0110100001110010",		--	jmp 	add16_exit
		113 => "0000001000000001",		--	set 	r2,1
		114 => "0010111000000001",		--	subl r6,1
		115 => "1010001100000110",		-- getmem 	r3,r6,0
		116 => "0000111000000111",		--	mov r6,r7
		117 => "0010111000000001",		-- subl r6,1
		118 => "1010011100000110",		-- getmem r7,r6,0
		119 => "0010111000000001",		--	subl r6,1
		120 => "1010010100000110",		-- getmem r5,r6,0
		121 => "0010111000000001",		-- subl r6,1
		122 => "1010010000000110",		-- getmem r4,r6,0
		123 => "1011110000000101",		-- setpc r4,r5
		124 => "1001111000000111",		--	setmem r6,r7,0
		125 => "0001111000000001",		-- addl r6,1
		126 => "0000111100000110",		-- mov r7,r6
		127 => "1001111000000010",		--	setmem r6,	r2,0
		128 => "0001111000000001",		-- addl r6,1
		129 => "1001111000000011",		--	setmem r6,	r3,0
		130 => "0001111000000001",		-- addl r6,1
		131 => "0010111100000000",		--	subl r7,0
		132 => "0010111100000100",		-- subl r7,4
		133 => "1010000000000111",		-- getmem r0,r7,0
		134 => "0001111100000100",		-- addl r7,4
		135 => "0001111100000000",		-- addl r7,0
		136 => "0010111100000001",		--	subl r7,1
		137 => "0010111100000100",		-- subl r7,4
		138 => "1010000100000111",		-- getmem r1,r7,0
		139 => "0001111100000100",		-- addl r7,4
		140 => "0001111100000001",		-- addl r7,1
		141 => "0010111100000010",		--	subl r7,2
		142 => "0010111100000100",		-- subl r7,4
		143 => "1010001000000111",		-- getmem r2,r7,0
		144 => "0001111100000100",		-- addl r7,4
		145 => "0001111100000010",		-- addl r7,2
		146 => "0000001100001000",		--	set 	r3,8
		147 => "0101101000000011",		--	cmp		r2,r3
		148 => "1000100010011101",		--	jlt		lsl16_shift_less_than_half
		149 => "0000000100000000",		--	set 	r1,0
		150 => "0010111100000001",		--	subl r7,1
		151 => "0010111100000100",		-- subl r7,4
		152 => "1010000000000111",		-- getmem r0,r7,0
		153 => "0001111100000100",		-- addl r7,4
		154 => "0001111100000001",		-- addl r7,1
		155 => "0011000000000010",		--	lsl 	r0,r2
		156 => "0110100010100100",		--	jmp 	lsl16_exit
		157 => "0011000000000010",		--	lsl 	r0,r2
		158 => "0000001100001000",		--	set 	r3,8
		159 => "0010001100000010",		--	sub 	r3,r2	
		160 => "0000110000000001",		--	mov 	r4,r1
		161 => "0011110000000011",		--	lsr 	r4,r3
		162 => "0101000000000100",		--	or 		r0,r4
		163 => "0011000100000010",		--	lsl 	r1,r2
		164 => "0010111000000001",		--	subl r6,1
		165 => "1010001100000110",		-- getmem 	r3,r6,0
		166 => "0010111000000001",		--	subl r6,1
		167 => "1010001000000110",		-- getmem 	r2,r6,0
		168 => "0000111000000111",		--	mov r6,r7
		169 => "0010111000000001",		-- subl r6,1
		170 => "1010011100000110",		-- getmem r7,r6,0
		171 => "0010111000000001",		--	subl r6,1
		172 => "1010010100000110",		-- getmem r5,r6,0
		173 => "0010111000000001",		-- subl r6,1
		174 => "1010010000000110",		-- getmem r4,r6,0
		175 => "1011110000000101",		-- setpc r4,r5
		176 => "1001111000000111",		--	setmem r6,r7,0
		177 => "0001111000000001",		-- addl r6,1
		178 => "0000111100000110",		-- mov r7,r6
		179 => "0001111000000011",		--	addl r6,	3
		180 => "1001111000000010",		--	setmem r6,	r2,0
		181 => "0001111000000001",		-- addl r6,1
		182 => "1001111000000011",		--	setmem r6,	r3,0
		183 => "0001111000000001",		-- addl r6,1
		184 => "0000001000000000",		--	set 	r2,0	
		185 => "0000000000000000",		--	set 	r0,0
		186 => "0001111100000000",		--	addl r7,0
		187 => "1001111100000000",		-- setmem r7,r0	,0
		188 => "0010111100000000",		-- subl r7,0	
		189 => "0001111100000001",		--	addl r7,1
		190 => "1001111100000000",		-- setmem r7,r0	,0
		191 => "0010111100000001",		-- subl r7,1	
		192 => "0000000000000001",		--	set 	r0,1
		193 => "0001111100000010",		--	addl r7,2
		194 => "1001111100000000",		-- setmem r7,r0	,0
		195 => "0010111100000010",		-- subl r7,2	
		196 => "0000001100000111",		--	set 	r3,7
		197 => "0101101000000011",		--	cmp 	r2,r3
		198 => "1000000100011000",		--	jgt 	mult8_exit
		199 => "0010111100000001",		--	subl r7,1	
		200 => "0010111100000100",		-- subl r7,4
		201 => "1010000100000111",		-- getmem r1,r7,0
		202 => "0001111100000100",		-- addl r7,4
		203 => "0001111100000001",		-- addl r7,1		
		204 => "0001111100000010",		--	addl r7,2	
		205 => "1010001100000111",		-- getmem r3,r7,0
		206 => "0010111100000010",		-- subl r7,2		
		207 => "0100100100000011",		--	and 	r1,r3
		208 => "0000001100000000",		--	set 	r3,0
		209 => "0101100100000011",		--	cmp		r1,r3
		210 => "0111100011010100",		--	jne		mult8_shift_and_add
		211 => "0110100100001110",		--	jmp		mult8_loop_end
		212 => "0000000000000000",		--	set 	r0,0
		213 => "0010111100000000",		--	subl r7,0	
		214 => "0010111100000100",		-- subl r7,4
		215 => "1010000100000111",		-- getmem r1,r7,0
		216 => "0001111100000100",		-- addl r7,4
		217 => "0001111100000000",		-- addl r7,0		
		218 => "1001111000000010",		--	setmem r6,r2		,0
		219 => "0001111000000001",		-- addl r6,1		
		220 => "1001111000000001",		--	setmem r6,r1,0
		221 => "0001111000000001",		-- addl r6,1
		222 => "1001111000000000",		--	setmem r6,r0,0
		223 => "0001111000000001",		-- addl r6,1
		224 => "1010110100000000",		--	getpcl r5
		225 => "1011010000000000",		-- getpch r4
		226 => "0001110100001011",		--  addl r5,11
		227 => "1001000011100101",		-- jovf inc_upper_mangled_tempfile3.asm_167
		228 => "0110100011100110",		--  jmp pushret_mangled_tempfile3.asm_167
		229 => "0001110000000001",		-- addl r4,1
		230 => "1001111000000100",		-- setmem r6,r4,0
		231 => "0001111000000001",		-- addl r6,1
		232 => "1001111000000101",		-- setmem r6,r5,0
		233 => "0001111000000001",		-- addl r6,1
		234 => "0110100001111100",		-- jmp lsl16
		235 => "0010111000000011",		--	subl	r6,3
		236 => "0001111100000000",		--	addl r7,0	
		237 => "1010001100000111",		-- getmem r3,r7,0
		238 => "0010111100000000",		-- subl r7,0		
		239 => "0001111100000001",		--	addl r7,1
		240 => "1010010000000111",		-- getmem r4,r7,0
		241 => "0010111100000001",		-- subl r7,1
		242 => "1001111000000100",		--	setmem r6,r4,0
		243 => "0001111000000001",		-- addl r6,1
		244 => "1001111000000011",		--	setmem r6,r3,0
		245 => "0001111000000001",		-- addl r6,1
		246 => "1001111000000001",		--	setmem r6,r1,0
		247 => "0001111000000001",		-- addl r6,1
		248 => "1001111000000000",		--	setmem r6,r0,0
		249 => "0001111000000001",		-- addl r6,1
		250 => "0000101100000010",		--	mov		r3,r2	
		251 => "1010110100000000",		--	getpcl r5
		252 => "1011010000000000",		-- getpch r4
		253 => "0001110100001011",		--  addl r5,11
		254 => "1001000100000000",		-- jovf inc_upper_mangled_tempfile3.asm_178
		255 => "0110100100000001",		--  jmp pushret_mangled_tempfile3.asm_178
		256 => "0001110000000001",		-- addl r4,1
		257 => "1001111000000100",		-- setmem r6,r4,0
		258 => "0001111000000001",		-- addl r6,1
		259 => "1001111000000101",		-- setmem r6,r5,0
		260 => "0001111000000001",		-- addl r6,1
		261 => "0110100001001101",		-- jmp add16
		262 => "0010111000000100",		--	subl	r6,4
		263 => "0001111100000000",		--	addl r7,0
		264 => "1001111100000000",		-- setmem r7,r0,0
		265 => "0010111100000000",		-- subl r7,0
		266 => "0001111100000001",		--	addl r7,1
		267 => "1001111100000001",		-- setmem r7,r1,0
		268 => "0010111100000001",		-- subl r7,1
		269 => "0000101000000011",		--	mov		r2,r3
		270 => "0001111100000010",		--	addl r7,2
		271 => "1010000000000111",		-- getmem r0,r7,0
		272 => "0010111100000010",		-- subl r7,2
		273 => "0000000100000001",		--	set 	r1,1
		274 => "0011000000000001",		--	lsl 	r0,r1
		275 => "0001111100000010",		--	addl r7,2
		276 => "1001111100000000",		-- setmem r7,r0,0
		277 => "0010111100000010",		-- subl r7,2
		278 => "0001101000000001",		--	addl 	r2,1
		279 => "0110100011000100",		--	jmp 	mult8_loop
		280 => "0001111100000000",		--	addl r7,0
		281 => "1010000000000111",		-- getmem r0,r7,0
		282 => "0010111100000000",		-- subl r7,0
		283 => "0001111100000001",		--	addl r7,1
		284 => "1010000100000111",		-- getmem r1,r7,0
		285 => "0010111100000001",		-- subl r7,1
		286 => "0010111000000001",		--	subl r6,1
		287 => "1010001100000110",		-- getmem 	r3,r6,0
		288 => "0010111000000001",		--	subl r6,1
		289 => "1010001000000110",		-- getmem 	r2,r6,0
		290 => "0000111000000111",		--	mov r6,r7
		291 => "0010111000000001",		-- subl r6,1
		292 => "1010011100000110",		-- getmem r7,r6,0
		293 => "0010111000000001",		--	subl r6,1
		294 => "1010010100000110",		-- getmem r5,r6,0
		295 => "0010111000000001",		-- subl r6,1
		296 => "1010010000000110",		-- getmem r4,r6,0
		297 => "1011110000000101",		-- setpc r4,r5

        others => "0000000000000000"
    );
    --signal prog_rom: prog_mem_t := HEXFILE;
begin
    
    uut: processor port map (
        temporary_processor_instr_input => instr_input,
        clk => clk,
        ext_rst => ext_rst,
        pc_out => pc
    );
    
    

    clk_proc: process
    begin
        clk <= '1';
        instr_input <= prog_rom(to_integer(unsigned(pc)));
        wait for 50ns;
        clk <= '0';
        wait for 50ns;
    end process;
    
    main_proc: process
    begin
        --ext_rst <= '0';
        --wait for 360ns;
        --ext_rst <= '1';
        --wait for 20ns;

        --let the program execute        
        wait for 1000*1000ms;
        

    end process;

end Behavioral;
