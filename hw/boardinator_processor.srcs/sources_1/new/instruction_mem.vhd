

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
use IEEE.NUMERIC_STD.ALL;

entity instruction_mem is
    Port ( clk : in STD_LOGIC;
           pc : in STD_LOGIC_VECTOR (9 downto 0);
           instr : out STD_LOGIC_VECTOR (15 downto 0));
end instruction_mem;

architecture Behavioral of instruction_mem is

    type prog_mem_t is array (490 downto 0) of std_logic_vector(15 downto 0);
    signal prog_rom: prog_mem_t :=
    (    
				0 => "0000010000100000",		--	set r4,0x20
		1 => "0000010111111111",		-- set r5,0xFF
		2 => "1011010001000101",		-- setm r4,r5,1,0
		3 => "0000010000100011",		--	set r4,0x23
		4 => "0000010100000000",		-- set r5,0x00
		5 => "1011010001000101",		-- setm r4,r5,1,0
		6 => "0000010000100010",		--	set r4,0x22
		7 => "0000010100000000",		-- set r5,0x00
		8 => "1011010001000101",		-- setm r4,r5,1,0
		9 => "0000010000001010",		--	set r4,10
		10 => "0000010110000000",		-- set r5,0x80	
		11 => "1011010001000101",		-- setm r4,r5,1,0	
		12 => "0000001100000000",		--	set		r3,0x00		
		13 => "0000010101100100",		--	set 		r5,100
		14 => "1011011000001101",		--	setm r6,	r5,0,1
		15 => "1100010100000000",		--	getpcl r5
		16 => "1100110000000000",		-- getpch r4
		17 => "0001110100001001",		--  addl r5,9
		18 => "1010100000010100",		-- jovf inc_upper_mangled_tempfile3.asm_28
		19 => "1000000000010101",		--  jmp pushret_mangled_tempfile3.asm_28
		20 => "0001110000000001",		-- addl r4,1
		21 => "1011011000001100",		-- setm r6,r4,0,1
		22 => "1011011000001101",		-- setm r6,r5,0,1
		23 => "1000000101101111",		-- jmp 	delay_ms
		24 => "0010111000000001",		--	subl		r6,1
		25 => "0000010101100010",		--	set r5,	0x62		
		26 => "1011011000001101",		-- setm r6,r5,0,1
		27 => "1100010100000000",		-- getpcl r5
		28 => "1100110000000000",		-- getpch r4
		29 => "0001110100001001",		--  addl r5,9
		30 => "1010100000100000",		-- jovf inc_upper_mangled_tempfile4.asm_30
		31 => "1000000000100001",		--  jmp pushret_mangled_tempfile4.asm_30
		32 => "0001110000000001",		-- addl r4,1
		33 => "1011011000001100",		-- setm r6,r4,0,1
		34 => "1011011000001101",		-- setm r6,r5,0,1
		35 => "1000000110010100",		-- jmp send_uart_char
		36 => "0010111000000001",		-- subl r6,1		
		37 => "0000010101101001",		--	set r5,	0x69		
		38 => "1011011000001101",		-- setm r6,r5,0,1
		39 => "1100010100000000",		-- getpcl r5
		40 => "1100110000000000",		-- getpch r4
		41 => "0001110100001001",		--  addl r5,9
		42 => "1010100000101100",		-- jovf inc_upper_mangled_tempfile4.asm_31
		43 => "1000000000101101",		--  jmp pushret_mangled_tempfile4.asm_31
		44 => "0001110000000001",		-- addl r4,1
		45 => "1011011000001100",		-- setm r6,r4,0,1
		46 => "1011011000001101",		-- setm r6,r5,0,1
		47 => "1000000110010100",		-- jmp send_uart_char
		48 => "0010111000000001",		-- subl r6,1		
		49 => "0000010101100111",		--	set r5,	0x67		
		50 => "1011011000001101",		-- setm r6,r5,0,1
		51 => "1100010100000000",		-- getpcl r5
		52 => "1100110000000000",		-- getpch r4
		53 => "0001110100001001",		--  addl r5,9
		54 => "1010100000111000",		-- jovf inc_upper_mangled_tempfile4.asm_32
		55 => "1000000000111001",		--  jmp pushret_mangled_tempfile4.asm_32
		56 => "0001110000000001",		-- addl r4,1
		57 => "1011011000001100",		-- setm r6,r4,0,1
		58 => "1011011000001101",		-- setm r6,r5,0,1
		59 => "1000000110010100",		-- jmp send_uart_char
		60 => "0010111000000001",		-- subl r6,1		
		61 => "0000010101110100",		--	set r5,	0x74		
		62 => "1011011000001101",		-- setm r6,r5,0,1
		63 => "1100010100000000",		-- getpcl r5
		64 => "1100110000000000",		-- getpch r4
		65 => "0001110100001001",		--  addl r5,9
		66 => "1010100001000100",		-- jovf inc_upper_mangled_tempfile4.asm_33
		67 => "1000000001000101",		--  jmp pushret_mangled_tempfile4.asm_33
		68 => "0001110000000001",		-- addl r4,1
		69 => "1011011000001100",		-- setm r6,r4,0,1
		70 => "1011011000001101",		-- setm r6,r5,0,1
		71 => "1000000110010100",		-- jmp send_uart_char
		72 => "0010111000000001",		-- subl r6,1		
		73 => "0000010101100101",		--	set r5,	0x65		
		74 => "1011011000001101",		-- setm r6,r5,0,1
		75 => "1100010100000000",		-- getpcl r5
		76 => "1100110000000000",		-- getpch r4
		77 => "0001110100001001",		--  addl r5,9
		78 => "1010100001010000",		-- jovf inc_upper_mangled_tempfile4.asm_34
		79 => "1000000001010001",		--  jmp pushret_mangled_tempfile4.asm_34
		80 => "0001110000000001",		-- addl r4,1
		81 => "1011011000001100",		-- setm r6,r4,0,1
		82 => "1011011000001101",		-- setm r6,r5,0,1
		83 => "1000000110010100",		-- jmp send_uart_char
		84 => "0010111000000001",		-- subl r6,1		
		85 => "0000010101110011",		--	set r5,	0x73		
		86 => "1011011000001101",		-- setm r6,r5,0,1
		87 => "1100010100000000",		-- getpcl r5
		88 => "1100110000000000",		-- getpch r4
		89 => "0001110100001001",		--  addl r5,9
		90 => "1010100001011100",		-- jovf inc_upper_mangled_tempfile4.asm_35
		91 => "1000000001011101",		--  jmp pushret_mangled_tempfile4.asm_35
		92 => "0001110000000001",		-- addl r4,1
		93 => "1011011000001100",		-- setm r6,r4,0,1
		94 => "1011011000001101",		-- setm r6,r5,0,1
		95 => "1000000110010100",		-- jmp send_uart_char
		96 => "0010111000000001",		-- subl r6,1		
		97 => "0000010101110100",		--	set r5,	0x74		
		98 => "1011011000001101",		-- setm r6,r5,0,1
		99 => "1100010100000000",		-- getpcl r5
		100 => "1100110000000000",		-- getpch r4
		101 => "0001110100001001",		--  addl r5,9
		102 => "1010100001101000",		-- jovf inc_upper_mangled_tempfile4.asm_36
		103 => "1000000001101001",		--  jmp pushret_mangled_tempfile4.asm_36
		104 => "0001110000000001",		-- addl r4,1
		105 => "1011011000001100",		-- setm r6,r4,0,1
		106 => "1011011000001101",		-- setm r6,r5,0,1
		107 => "1000000110010100",		-- jmp send_uart_char
		108 => "0010111000000001",		-- subl r6,1		
		109 => "0000010100001101",		--	set r5,	0x0D		
		110 => "1011011000001101",		-- setm r6,r5,0,1
		111 => "1100010100000000",		-- getpcl r5
		112 => "1100110000000000",		-- getpch r4
		113 => "0001110100001001",		--  addl r5,9
		114 => "1010100001110100",		-- jovf inc_upper_mangled_tempfile4.asm_37
		115 => "1000000001110101",		--  jmp pushret_mangled_tempfile4.asm_37
		116 => "0001110000000001",		-- addl r4,1
		117 => "1011011000001100",		-- setm r6,r4,0,1
		118 => "1011011000001101",		-- setm r6,r5,0,1
		119 => "1000000110010100",		-- jmp send_uart_char
		120 => "0010111000000001",		-- subl r6,1		
		121 => "0000010100001010",		--	set r5,	0x0A		
		122 => "1011011000001101",		-- setm r6,r5,0,1
		123 => "1100010100000000",		-- getpcl r5
		124 => "1100110000000000",		-- getpch r4
		125 => "0001110100001001",		--  addl r5,9
		126 => "1010100010000000",		-- jovf inc_upper_mangled_tempfile4.asm_38
		127 => "1000000010000001",		--  jmp pushret_mangled_tempfile4.asm_38
		128 => "0001110000000001",		-- addl r4,1
		129 => "1011011000001100",		-- setm r6,r4,0,1
		130 => "1011011000001101",		-- setm r6,r5,0,1
		131 => "1000000110010100",		-- jmp send_uart_char
		132 => "0010111000000001",		-- subl r6,1		
		133 => "0000010000100100",		--	set r4,0x24
		134 => "1011100001000100",		-- getm r0,r4,1,0
		135 => "0100100011111111",		--	xorl r,0xFF
		136 => "0101100000000011",		--	andl		r0,0x03
		137 => "0111100000000000",		--	cmpl r0,0
		138 => "1000100010010010",		--	jeq case_a
		139 => "0111100000000001",		--	cmpl r0,1
		140 => "1000100010010100",		--	jeq case_b
		141 => "0111100000000010",		--	cmpl r0,2
		142 => "1000100010010110",		--	jeq case_c
		143 => "0111100000000011",		--	cmpl r0,3
		144 => "1000100010011000",		--	jeq case_d
		145 => "1000000010011010",		--	jmp switch_end
		146 => "0000000011111010",		--	set		r0,250
		147 => "1000000010011010",		--	jmp switch_end
		148 => "0000000010010110",		--	set		r0,150
		149 => "1000000010011010",		--	jmp switch_end
		150 => "0000000001001011",		--	set		r0,75
		151 => "1000000010011010",		--	jmp switch_end
		152 => "0000000000101000",		--	set		r0,40
		153 => "1000000010011010",		--	jmp switch_end
		154 => "0000001000100010",		--	set			r2,0x22
		155 => "1011001001000011",		--	setm		r2,r3,1,0
		156 => "1011011000001000",		--	setm r6,	r0,0,1
		157 => "1100010100000000",		--	getpcl r5
		158 => "1100110000000000",		-- getpch r4
		159 => "0001110100001001",		--  addl r5,9
		160 => "1010100010100010",		-- jovf inc_upper_mangled_tempfile3.asm_76
		161 => "1000000010100011",		--  jmp pushret_mangled_tempfile3.asm_76
		162 => "0001110000000001",		-- addl r4,1
		163 => "1011011000001100",		-- setm r6,r4,0,1
		164 => "1011011000001101",		-- setm r6,r5,0,1
		165 => "1000000101101111",		-- jmp 	delay_ms
		166 => "0010111000000001",		--	subl		r6,1
		167 => "0100101100000001",		--	xorl		r3,0x01
		168 => "0000010000001011",		--	set r4,11
		169 => "1011100001000100",		-- getm r0,r4,1,0
		170 => "0000001000000100",		--	set		r2,0x04
		171 => "0101000000000010",		--	and		r0,r2
		172 => "0111100000000000",		--	cmpl		r0,0
		173 => "1000100010000101",		--	jeq		main_loop
		174 => "0000010000001101",		--	set r4,13
		175 => "1011100001000100",		-- getm r0,r4,1,0
		176 => "1011011000001000",		--	setm r6,	r0,0,1
		177 => "1100010100000000",		--	getpcl r5
		178 => "1100110000000000",		-- getpch r4
		179 => "0001110100001001",		--  addl r5,9
		180 => "1010100010110110",		-- jovf inc_upper_mangled_tempfile3.asm_94
		181 => "1000000010110111",		--  jmp pushret_mangled_tempfile3.asm_94
		182 => "0001110000000001",		-- addl r4,1
		183 => "1011011000001100",		-- setm r6,r4,0,1
		184 => "1011011000001101",		-- setm r6,r5,0,1
		185 => "1000000110010100",		-- jmp 	send_uart_char
		186 => "0010111000000001",		--	subl		r6,1
		187 => "0010100000110000",		--	subl		r0,0x30
		188 => "1011011000001000",		--	setm r6,	r0,0,1
		189 => "1100010100000000",		--	getpcl r5
		190 => "1100110000000000",		-- getpch r4
		191 => "0001110100001001",		--  addl r5,9
		192 => "1010100011000010",		-- jovf inc_upper_mangled_tempfile3.asm_100
		193 => "1000000011000011",		--  jmp pushret_mangled_tempfile3.asm_100
		194 => "0001110000000001",		-- addl r4,1
		195 => "1011011000001100",		-- setm r6,r4,0,1
		196 => "1011011000001101",		-- setm r6,r5,0,1
		197 => "1000000101001100",		-- jmp 	factorial
		198 => "0010111000000001",		--	subl		r6,1
		199 => "0000001000001010",		--	set		r2,10
		200 => "1011011000001010",		--	setm r6,	r2,0,1
		201 => "1011011000001000",		--	setm r6,	r0,0,1
		202 => "1100010100000000",		--	getpcl r5
		203 => "1100110000000000",		-- getpch r4
		204 => "0001110100001001",		--  addl r5,9
		205 => "1010100011001111",		-- jovf inc_upper_mangled_tempfile3.asm_107
		206 => "1000000011010000",		--  jmp pushret_mangled_tempfile3.asm_107
		207 => "0001110000000001",		-- addl r4,1
		208 => "1011011000001100",		-- setm r6,r4,0,1
		209 => "1011011000001101",		-- setm r6,r5,0,1
		210 => "1000000110101001",		-- jmp 	uart_print_u8
		211 => "0010111000000010",		--	subl		r6,2
		212 => "0000010100001101",		--	set r5,	0x0D		
		213 => "1011011000001101",		-- setm r6,r5,0,1
		214 => "1100010100000000",		-- getpcl r5
		215 => "1100110000000000",		-- getpch r4
		216 => "0001110100001001",		--  addl r5,9
		217 => "1010100011011011",		-- jovf inc_upper_mangled_tempfile4.asm_109
		218 => "1000000011011100",		--  jmp pushret_mangled_tempfile4.asm_109
		219 => "0001110000000001",		-- addl r4,1
		220 => "1011011000001100",		-- setm r6,r4,0,1
		221 => "1011011000001101",		-- setm r6,r5,0,1
		222 => "1000000110010100",		-- jmp send_uart_char
		223 => "0010111000000001",		-- subl r6,1		
		224 => "0000010100001010",		--	set r5,	0x0A		
		225 => "1011011000001101",		-- setm r6,r5,0,1
		226 => "1100010100000000",		-- getpcl r5
		227 => "1100110000000000",		-- getpch r4
		228 => "0001110100001001",		--  addl r5,9
		229 => "1010100011100111",		-- jovf inc_upper_mangled_tempfile4.asm_110
		230 => "1000000011101000",		--  jmp pushret_mangled_tempfile4.asm_110
		231 => "0001110000000001",		-- addl r4,1
		232 => "1011011000001100",		-- setm r6,r4,0,1
		233 => "1011011000001101",		-- setm r6,r5,0,1
		234 => "1000000110010100",		-- jmp send_uart_char
		235 => "0010111000000001",		-- subl r6,1		
		236 => "1000000010000101",		--	jmp		main_loop
		237 => "0010111000000011",		--	subl r6,3
		238 => "1011100000000110",		--	getm r0,r6,0,0 
		239 => "0010111000000001",		--	subl r6,1
		240 => "1011100100000110",		--	getm r1,r6,0,0 
		241 => "0010111000000001",		--	subl r6,1
		242 => "1011110100000110",		--	getm r5,r6,0,0 
		243 => "0010111000000001",		--	subl r6,1
		244 => "1011110000000110",		--	getm r4,r6,0,0 
		245 => "0001111000000110",		--	addl r6,6
		246 => "0000001000000000",		--	set r2,0
		247 => "0001000100000100",		--	add r1,r4
		248 => "1010100011111010",		--	jovf add16_lo_ovflw
		249 => "1000000011111110",		--	jmp add16_add_hi_bytes
		250 => "0001100000000001",		--	addl r0,1
		251 => "1010100011111101",		--	jovf add16_hi_ovflw_1
		252 => "1000000011111110",		--	jmp add16_add_hi_bytes
		253 => "0000001000000001",		--	set r2,1
		254 => "0001000000000101",		--	add r0,r5
		255 => "1010100100000001",		--	jovf add16_hi_ovflw_2
		256 => "1000000100000010",		--	jmp add16_exit
		257 => "0000001000000001",		--	set r2,1
		258 => "0010111000000001",		--	subl r6,1
		259 => "1011110100000110",		-- getm r5,r6,0,0
		260 => "0010111000000001",		-- subl r6,1
		261 => "1011110000000110",		-- getm r4,r6,0,0
		262 => "1101010000000101",		-- setpc r4,r5
		263 => "1011011000001010",		--	setm r6,r2,0,1
		264 => "0010111000000100",		--	subl r6,4
		265 => "1011100000000110",		--	getm r0,r6,0,0 
		266 => "0010111000000001",		--	subl r6,1
		267 => "1011100100000110",		--	getm r1,r6,0,0 
		268 => "0010111000000001",		--	subl r6,1
		269 => "1011101000000110",		--	getm r2,r6,0,0 
		270 => "0001111000000110",		--	addl r6,6
		271 => "0111101000001000",		--	cmpl 	r2,8
		272 => "1010000100010101",		--	jlt		lsl16_shift_less_than_half
		273 => "0000100000000001",		--	mov 	r0,r1
		274 => "0000000100000000",		--	set 	r1,0
		275 => "0011000000000010",		--	lsl 	r0,r2
		276 => "1000000100011100",		--	jmp 	lsl16_exit
		277 => "0011000000000010",		--	lsl 	r0,r2	
		278 => "0000010100001000",		--	set 	r5,8
		279 => "0010010100000010",		--	sub 	r5,r2	
		280 => "0000110000000001",		--	mov 	r4,r1
		281 => "0011110000000101",		--	lsr 	r4,r5	
		282 => "0110000000000100",		--	or 		r0,r4
		283 => "0011000100000010",		--	lsl 	r1,r2
		284 => "0010111000000001",		--	subl r6,1
		285 => "1011101000000110",		-- getm 	r2,r6,0,0
		286 => "0010111000000001",		--	subl r6,1
		287 => "1011110100000110",		-- getm r5,r6,0,0
		288 => "0010111000000001",		-- subl r6,1
		289 => "1011110000000110",		-- getm r4,r6,0,0
		290 => "1101010000000101",		-- setpc r4,r5
		291 => "0010111000000011",		--	subl	r6,3
		292 => "1011110000000110",		--	getm	r4,r6,0,0
		293 => "0010111000000001",		--	subl	r6,1
		294 => "1011110100000110",		--	getm	r5,r6,0,0
		295 => "0001111000000100",		--	addl	r6,4
		296 => "0000000000000000",		--	set 	r0,0
		297 => "1000000100101100",		--	jmp		mult_loop_cond
		298 => "0001000000000100",		--	add 	r0,r4
		299 => "0010110100000001",		--	subl	r5,1
		300 => "0111110100000000",		--	cmpl	r5,0
		301 => "1001000100101010",		--	jne		mult_loop
		302 => "0010111000000001",		--	subl r6,1
		303 => "1011110100000110",		-- getm r5,r6,0,0
		304 => "0010111000000001",		-- subl r6,1
		305 => "1011110000000110",		-- getm r4,r6,0,0
		306 => "1101010000000101",		-- setpc r4,r5
		307 => "1011011000001010",		--	setm r6,r2,0,1
		308 => "0010111000000100",		--	subl	r6,4
		309 => "1011100100000110",		--	getm	r1,r6,0,0
		310 => "0010111000000001",		--	subl	r6,1
		311 => "1011101000000110",		--	getm	r2,r6,0,0
		312 => "0001111000000101",		--	addl	r6,5
		313 => "0111101000000000",		--	cmpl	r2,0
		314 => "1001000100111110",		--	jne	div8_legal
		315 => "0000010000000000",		--	set r4,0
		316 => "0000010110000000",		-- set r5,0x80	
		317 => "1011010001000101",		-- setm r4,r5,1,0	
		318 => "0000000000000000",		--	set		r0,0
		319 => "1000000101000010",		--	jmp		div8_cond
		320 => "0001100000000001",		--	addl	r0,1
		321 => "0010000100000010",		--	sub		r1,r2
		322 => "0111001000000001",		--	cmp 	r2,r1
		323 => "1010000101000000",		--	jlt		div8_loop
		324 => "1000100101000000",		--	jeq		div8_loop
		325 => "0010111000000001",		--	subl r6,1
		326 => "1011101000000110",		-- getm r2,r6,0,0
		327 => "0010111000000001",		--	subl r6,1
		328 => "1011110100000110",		-- getm r5,r6,0,0
		329 => "0010111000000001",		-- subl r6,1
		330 => "1011110000000110",		-- getm r4,r6,0,0
		331 => "1101010000000101",		-- setpc r4,r5
		332 => "1011011000001111",		--	setm r6,r7,0,1
		333 => "0000111100000110",		-- mov r7,r6
		334 => "1011011000001010",		--	setm r6,r2,0,1
		335 => "0010111100000000",		--	subl r7,0
		336 => "0010111100000100",		-- subl r7,4
		337 => "1011100000000111",		-- getm 	r0,r7,0,0
		338 => "0001111100000100",		-- addl r7,4
		339 => "0001111100000000",		-- addl r7,0
		340 => "0000101000000000",		--	mov 	r2,r0
		341 => "1000000101100010",		--	jmp		factorial_loop_cond
		342 => "1011011000001000",		--	setm r6,r0,0,1
		343 => "1011011000001010",		--	setm r6,r2,0,1
		344 => "1100010100000000",		--	getpcl r5
		345 => "1100110000000000",		-- getpch r4
		346 => "0001110100001001",		--  addl r5,9
		347 => "1010100101011101",		-- jovf inc_upper_mangled_tempfile3.asm_286
		348 => "1000000101011110",		--  jmp pushret_mangled_tempfile3.asm_286
		349 => "0001110000000001",		-- addl r4,1
		350 => "1011011000001100",		-- setm r6,r4,0,1
		351 => "1011011000001101",		-- setm r6,r5,0,1
		352 => "1000000100100011",		-- jmp mult8
		353 => "0010111000000010",		--	subl	r6,2
		354 => "0010101000000001",		--	subl	r2,1
		355 => "0111101000000001",		--	cmpl	r2,1
		356 => "1001100101010110",		--	jgt		factorial_loop
		357 => "0010111000000001",		--	subl r6,1
		358 => "1011101000000110",		-- getm 	r2,r6,0,0
		359 => "0000111000000111",		--	mov r6,r7
		360 => "0010111000000001",		-- subl r6,1
		361 => "1011111100000110",		-- getm r7,r6,0,0
		362 => "0010111000000001",		--	subl r6,1
		363 => "1011110100000110",		-- getm r5,r6,0,0
		364 => "0010111000000001",		-- subl r6,1
		365 => "1011110000000110",		-- getm r4,r6,0,0
		366 => "1101010000000101",		-- setpc r4,r5
		367 => "1011011000001000",		--	setm r6,	r0,0,1
		368 => "1011011000001001",		--	setm r6,	r1,0,1
		369 => "0010111000000101",		--	subl		r6,5
		370 => "1011100000000110",		--	getm		r0,r6,0,0
		371 => "0001111000000101",		--	addl		r6,5
		372 => "0000010000000010",		--	set r4,2
		373 => "0000010100000000",		-- set r5,0x00		
		374 => "1011010001000101",		-- setm r4,r5,1,0		
		375 => "0000010000000011",		--	set r4,3
		376 => "0000010111000011",		-- set r5,195
		377 => "1011010001000101",		-- setm r4,r5,1,0
		378 => "0000010000000010",		--	set r4,2
		379 => "0000010110000101",		-- set r5,0x85
		380 => "1011010001000101",		-- setm r4,r5,1,0
		381 => "0000010000000101",		--	set 		r4,5
		382 => "0000010100000001",		--	set 		r5,1
		383 => "1000000110001001",		--	jmp			delay_ms_cond
		384 => "1011100101000100",		--	getm		r1,r4,1,0
		385 => "0101000100000101",		--	and			r1,r5
		386 => "0111100100000001",		--	cmpl 		r1,1
		387 => "1001000110000000",		--	jne			delay_ms_loop
		388 => "1011100101000100",		--	getm		r1,r4,1,0
		389 => "0101100100000001",		--	andl		r1,0x01
		390 => "0111100100000001",		--	cmpl 		r1,1
		391 => "1000100110000100",		--	jeq			delay_ms_wait_til_lo
		392 => "0010100000000001",		--	subl		r0,1
		393 => "0111100000000000",		--	cmpl		r0,0
		394 => "1001000110000000",		--	jne			delay_ms_loop
		395 => "0010111000000001",		--	subl r6,1
		396 => "1011100100000110",		-- getm 		r1,r6,0,0
		397 => "0010111000000001",		--	subl r6,1
		398 => "1011100000000110",		-- getm 		r0,r6,0,0
		399 => "0010111000000001",		--	subl r6,1
		400 => "1011110100000110",		-- getm r5,r6,0,0
		401 => "0010111000000001",		-- subl r6,1
		402 => "1011110000000110",		-- getm r4,r6,0,0
		403 => "1101010000000101",		-- setpc r4,r5
		404 => "0010111000000011",		--	subl		r6,3
		405 => "1011110000000110",		--	getm		r4,r6,0,0
		406 => "0001111000000011",		--	addl		r6,3
		407 => "0000010100001100",		--	set 		r5,12
		408 => "1011010101000100",		--	setm 		r5,r4,1,0
		409 => "0000010000001010",		--	set r4,10
		410 => "0000010110000011",		-- set r5,0x83
		411 => "1011010001000101",		-- setm r4,r5,1,0
		412 => "0000010000001011",		--	set r4,11
		413 => "1011100101000100",		-- getm r1,r4,1,0
		414 => "0101100100000001",		--	andl		r1,0x01
		415 => "0111100100000001",		--	cmpl		r1,1
		416 => "1000100110011100",		--	jeq 		send_loop
		417 => "0000010000001010",		--	set r4,10
		418 => "0000010110000010",		-- set r5,0x82
		419 => "1011010001000101",		-- setm r4,r5,1,0
		420 => "0010111000000001",		--	subl r6,1
		421 => "1011110100000110",		-- getm r5,r6,0,0
		422 => "0010111000000001",		-- subl r6,1
		423 => "1011110000000110",		-- getm r4,r6,0,0
		424 => "1101010000000101",		-- setpc r4,r5
		425 => "1011011000001111",		--	setm r6,r7,0,1
		426 => "0000111100000110",		-- mov r7,r6
		427 => "1011011000001010",		--	setm r6,r2,0,1
		428 => "1011011000001011",		--	setm r6,r3,0,1
		429 => "0000001100000000",		--	set 	r3,0	
		430 => "0010111100000100",		--	subl	r7,4
		431 => "1011100000000111",		--	getm	r0,r7,0,0
		432 => "0010111100000001",		--	subl	r7,1
		433 => "1011101000000111",		--	getm	r2,r7,0,0
		434 => "0001111100000101",		--	addl	r7,5
		435 => "1011011000001010",		--	setm r6,r2,0,1
		436 => "1011011000001000",		--	setm r6,r0,0,1
		437 => "1100010100000000",		--	getpcl r5
		438 => "1100110000000000",		-- getpch r4
		439 => "0001110100001001",		--  addl r5,9
		440 => "1010100110111010",		-- jovf inc_upper_mangled_tempfile3.asm_58
		441 => "1000000110111011",		--  jmp pushret_mangled_tempfile3.asm_58
		442 => "0001110000000001",		-- addl r4,1
		443 => "1011011000001100",		-- setm r6,r4,0,1
		444 => "1011011000001101",		-- setm r6,r5,0,1
		445 => "1000000100110011",		-- jmp div8
		446 => "0010111000000010",		--	subl	r6,2
		447 => "0111100100001010",		--	cmpl	r1,10
		448 => "1010000111000011",		--	jlt		uart_print_u8_numeric_char
		449 => "0001100100110111",		--	addl	r1,0x37		
		450 => "1000000111000100",		--	jmp		uart_print_u8_char_converted
		451 => "0001100100110000",		--	addl	r1,0x30		
		452 => "1011011000001001",		--	setm r6,r1,0,1
		453 => "0001101100000001",		--	addl	r3,1
		454 => "0111100000000000",		--	cmpl	r0,0
		455 => "1001000110110011",		--	jne	uart_print_u8_loop
		456 => "1000000111010100",		--	jmp		uart_print_u8_rev_cond
		457 => "1100010100000000",		--	getpcl r5
		458 => "1100110000000000",		-- getpch r4
		459 => "0001110100001001",		--  addl r5,9
		460 => "1010100111001110",		-- jovf inc_upper_mangled_tempfile3.asm_85
		461 => "1000000111001111",		--  jmp pushret_mangled_tempfile3.asm_85
		462 => "0001110000000001",		-- addl r4,1
		463 => "1011011000001100",		-- setm r6,r4,0,1
		464 => "1011011000001101",		-- setm r6,r5,0,1
		465 => "1000000110010100",		-- jmp send_uart_char
		466 => "0010111000000001",		--	subl	r6,1
		467 => "0010101100000001",		--	subl	r3,1
		468 => "0111101100000000",		--	cmpl	r3,0
		469 => "1001000111001001",		--	jne		uart_print_u8_rev_loop	
		470 => "0010111000000001",		--	subl r6,1
		471 => "1011101100000110",		-- getm 	r3,r6,0,0
		472 => "0010111000000001",		--	subl r6,1
		473 => "1011101000000110",		-- getm 	r2,r6,0,0
		474 => "0000111000000111",		--	mov r6,r7
		475 => "0010111000000001",		-- subl r6,1
		476 => "1011111100000110",		-- getm r7,r6,0,0
		477 => "0010111000000001",		--	subl r6,1
		478 => "1011110100000110",		-- getm r5,r6,0,0
		479 => "0010111000000001",		-- subl r6,1
		480 => "1011110000000110",		-- getm r4,r6,0,0
		481 => "1101010000000101",		-- setpc r4,r5

        
        others => "0000000000000000"
    );

begin
    process(clk)
    begin
        if(clk'event and clk='1') then
            instr <= prog_rom(to_integer(unsigned(pc)));
        end if;
    end process;
end Behavioral;
