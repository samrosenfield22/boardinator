

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
use IEEE.NUMERIC_STD.ALL;

entity instruction_mem is
    Port ( clk : in STD_LOGIC;
           pc : in STD_LOGIC_VECTOR (9 downto 0);
           instr : out STD_LOGIC_VECTOR (15 downto 0));
end instruction_mem;

architecture Behavioral of instruction_mem is

    type prog_mem_t is array (490 downto 0) of std_logic_vector(15 downto 0);
    signal prog_rom: prog_mem_t :=
    (    
				0 => "0000010000100000",		--	set r4,0x20
		1 => "0000010111111111",		-- set r5,0xFF
		2 => "1011110001000101",		-- setm r4,r5,1,0
		3 => "0000010000100011",		--	set r4,0x23
		4 => "0000010100000000",		-- set r5,0x00
		5 => "1011110001000101",		-- setm r4,r5,1,0
		6 => "0000010000100010",		--	set r4,0x22
		7 => "0000010100000000",		-- set r5,0x00
		8 => "1011110001000101",		-- setm r4,r5,1,0
		9 => "0000010000001010",		--	set r4,10
		10 => "0000010110000000",		-- set r5,0x80	
		11 => "1011110001000101",		-- setm r4,r5,1,0	
		12 => "0000001100000000",		--	set		r3,0x00		
		13 => "0000010101100100",		--	set 		r5,100
		14 => "1011111000001101",		--	setm r6,	r5,0,1
		15 => "1100110100000000",		--	getpcl r5
		16 => "1101010000000000",		-- getpch r4
		17 => "0001110100001000",		--  addl r5,8
		18 => "1011000000010100",		-- jnov pushret_mangled_tempfile3.asm_28
		19 => "0001110000000001",		-- addl r4,1
		20 => "1011111000001100",		-- setm r6,r4,0,1
		21 => "1011111000001101",		-- setm r6,r5,0,1
		22 => "1001000101011110",		-- jmp 	delay_ms
		23 => "0010111000000001",		--	subl		r6,1
		24 => "0000010101100010",		--	set r5,	0x62		
		25 => "1011111000001101",		-- setm r6,r5,0,1
		26 => "1100110100000000",		-- getpcl r5
		27 => "1101010000000000",		-- getpch r4
		28 => "0001110100001000",		--  addl r5,8
		29 => "1011000000011111",		-- jnov pushret_mangled_tempfile4.asm_30
		30 => "0001110000000001",		-- addl r4,1
		31 => "1011111000001100",		-- setm r6,r4,0,1
		32 => "1011111000001101",		-- setm r6,r5,0,1
		33 => "1001000110000000",		-- jmp send_uart_char
		34 => "0010111000000001",		-- subl r6,1		
		35 => "0000010101101001",		--	set r5,	0x69		
		36 => "1011111000001101",		-- setm r6,r5,0,1
		37 => "1100110100000000",		-- getpcl r5
		38 => "1101010000000000",		-- getpch r4
		39 => "0001110100001000",		--  addl r5,8
		40 => "1011000000101010",		-- jnov pushret_mangled_tempfile4.asm_31
		41 => "0001110000000001",		-- addl r4,1
		42 => "1011111000001100",		-- setm r6,r4,0,1
		43 => "1011111000001101",		-- setm r6,r5,0,1
		44 => "1001000110000000",		-- jmp send_uart_char
		45 => "0010111000000001",		-- subl r6,1		
		46 => "0000010101100111",		--	set r5,	0x67		
		47 => "1011111000001101",		-- setm r6,r5,0,1
		48 => "1100110100000000",		-- getpcl r5
		49 => "1101010000000000",		-- getpch r4
		50 => "0001110100001000",		--  addl r5,8
		51 => "1011000000110101",		-- jnov pushret_mangled_tempfile4.asm_32
		52 => "0001110000000001",		-- addl r4,1
		53 => "1011111000001100",		-- setm r6,r4,0,1
		54 => "1011111000001101",		-- setm r6,r5,0,1
		55 => "1001000110000000",		-- jmp send_uart_char
		56 => "0010111000000001",		-- subl r6,1		
		57 => "0000010101110100",		--	set r5,	0x74		
		58 => "1011111000001101",		-- setm r6,r5,0,1
		59 => "1100110100000000",		-- getpcl r5
		60 => "1101010000000000",		-- getpch r4
		61 => "0001110100001000",		--  addl r5,8
		62 => "1011000001000000",		-- jnov pushret_mangled_tempfile4.asm_33
		63 => "0001110000000001",		-- addl r4,1
		64 => "1011111000001100",		-- setm r6,r4,0,1
		65 => "1011111000001101",		-- setm r6,r5,0,1
		66 => "1001000110000000",		-- jmp send_uart_char
		67 => "0010111000000001",		-- subl r6,1		
		68 => "0000010101100101",		--	set r5,	0x65		
		69 => "1011111000001101",		-- setm r6,r5,0,1
		70 => "1100110100000000",		-- getpcl r5
		71 => "1101010000000000",		-- getpch r4
		72 => "0001110100001000",		--  addl r5,8
		73 => "1011000001001011",		-- jnov pushret_mangled_tempfile4.asm_34
		74 => "0001110000000001",		-- addl r4,1
		75 => "1011111000001100",		-- setm r6,r4,0,1
		76 => "1011111000001101",		-- setm r6,r5,0,1
		77 => "1001000110000000",		-- jmp send_uart_char
		78 => "0010111000000001",		-- subl r6,1		
		79 => "0000010101110011",		--	set r5,	0x73		
		80 => "1011111000001101",		-- setm r6,r5,0,1
		81 => "1100110100000000",		-- getpcl r5
		82 => "1101010000000000",		-- getpch r4
		83 => "0001110100001000",		--  addl r5,8
		84 => "1011000001010110",		-- jnov pushret_mangled_tempfile4.asm_35
		85 => "0001110000000001",		-- addl r4,1
		86 => "1011111000001100",		-- setm r6,r4,0,1
		87 => "1011111000001101",		-- setm r6,r5,0,1
		88 => "1001000110000000",		-- jmp send_uart_char
		89 => "0010111000000001",		-- subl r6,1		
		90 => "0000010101110100",		--	set r5,	0x74		
		91 => "1011111000001101",		-- setm r6,r5,0,1
		92 => "1100110100000000",		-- getpcl r5
		93 => "1101010000000000",		-- getpch r4
		94 => "0001110100001000",		--  addl r5,8
		95 => "1011000001100001",		-- jnov pushret_mangled_tempfile4.asm_36
		96 => "0001110000000001",		-- addl r4,1
		97 => "1011111000001100",		-- setm r6,r4,0,1
		98 => "1011111000001101",		-- setm r6,r5,0,1
		99 => "1001000110000000",		-- jmp send_uart_char
		100 => "0010111000000001",		-- subl r6,1		
		101 => "0000010100001101",		--	set r5,	0x0D		
		102 => "1011111000001101",		-- setm r6,r5,0,1
		103 => "1100110100000000",		-- getpcl r5
		104 => "1101010000000000",		-- getpch r4
		105 => "0001110100001000",		--  addl r5,8
		106 => "1011000001101100",		-- jnov pushret_mangled_tempfile4.asm_37
		107 => "0001110000000001",		-- addl r4,1
		108 => "1011111000001100",		-- setm r6,r4,0,1
		109 => "1011111000001101",		-- setm r6,r5,0,1
		110 => "1001000110000000",		-- jmp send_uart_char
		111 => "0010111000000001",		-- subl r6,1		
		112 => "0000010100001010",		--	set r5,	0x0A		
		113 => "1011111000001101",		-- setm r6,r5,0,1
		114 => "1100110100000000",		-- getpcl r5
		115 => "1101010000000000",		-- getpch r4
		116 => "0001110100001000",		--  addl r5,8
		117 => "1011000001110111",		-- jnov pushret_mangled_tempfile4.asm_38
		118 => "0001110000000001",		-- addl r4,1
		119 => "1011111000001100",		-- setm r6,r4,0,1
		120 => "1011111000001101",		-- setm r6,r5,0,1
		121 => "1001000110000000",		-- jmp send_uart_char
		122 => "0010111000000001",		-- subl r6,1		
		123 => "0000010000100100",		--	set r4,0x24
		124 => "1100000001000100",		-- getm r0,r4,1,0
		125 => "0100100011111111",		--	xorl r,0xFF
		126 => "0101100000000011",		--	andl		r0,0x03
		127 => "0111100000000000",		--	cmpl r0,0
		128 => "1001100010001000",		--	jz case_a
		129 => "0111100000000001",		--	cmpl r0,1
		130 => "1001100010001010",		--	jz case_b
		131 => "0111100000000010",		--	cmpl r0,2
		132 => "1001100010001100",		--	jz case_c
		133 => "0111100000000011",		--	cmpl r0,3
		134 => "1001100010001110",		--	jz case_d
		135 => "1001000010010000",		--	jmp switch_end
		136 => "0000000011111010",		--	set		r0,250
		137 => "1001000010010000",		--	jmp switch_end
		138 => "0000000010010110",		--	set		r0,150
		139 => "1001000010010000",		--	jmp switch_end
		140 => "0000000001001011",		--	set		r0,75
		141 => "1001000010010000",		--	jmp switch_end
		142 => "0000000000101000",		--	set		r0,40
		143 => "1001000010010000",		--	jmp switch_end
		144 => "0000001000100010",		--	set			r2,0x22
		145 => "1011101001000011",		--	setm		r2,r3,1,0
		146 => "1011111000001000",		--	setm r6,	r0,0,1
		147 => "1100110100000000",		--	getpcl r5
		148 => "1101010000000000",		-- getpch r4
		149 => "0001110100001000",		--  addl r5,8
		150 => "1011000010011000",		-- jnov pushret_mangled_tempfile3.asm_76
		151 => "0001110000000001",		-- addl r4,1
		152 => "1011111000001100",		-- setm r6,r4,0,1
		153 => "1011111000001101",		-- setm r6,r5,0,1
		154 => "1001000101011110",		-- jmp 	delay_ms
		155 => "0010111000000001",		--	subl		r6,1
		156 => "0100101100000001",		--	xorl		r3,0x01
		157 => "0000010000001011",		--	set r4,11
		158 => "1100000001000100",		-- getm r0,r4,1,0
		159 => "0000001000000100",		--	set		r2,0x04
		160 => "0101000000000010",		--	and		r0,r2
		161 => "0111100000000000",		--	cmpl		r0,0
		162 => "1001100001111011",		--	jz		main_loop
		163 => "0000010000001101",		--	set r4,13
		164 => "1100000001000100",		-- getm r0,r4,1,0
		165 => "1011111000001000",		--	setm r6,	r0,0,1
		166 => "1100110100000000",		--	getpcl r5
		167 => "1101010000000000",		-- getpch r4
		168 => "0001110100001000",		--  addl r5,8
		169 => "1011000010101011",		-- jnov pushret_mangled_tempfile3.asm_94
		170 => "0001110000000001",		-- addl r4,1
		171 => "1011111000001100",		-- setm r6,r4,0,1
		172 => "1011111000001101",		-- setm r6,r5,0,1
		173 => "1001000110000000",		-- jmp 	send_uart_char
		174 => "0010111000000001",		--	subl		r6,1
		175 => "0010100000110000",		--	subl		r0,0x30
		176 => "1011111000001000",		--	setm r6,	r0,0,1
		177 => "1100110100000000",		--	getpcl r5
		178 => "1101010000000000",		-- getpch r4
		179 => "0001110100001000",		--  addl r5,8
		180 => "1011000010110110",		-- jnov pushret_mangled_tempfile3.asm_100
		181 => "0001110000000001",		-- addl r4,1
		182 => "1011111000001100",		-- setm r6,r4,0,1
		183 => "1011111000001101",		-- setm r6,r5,0,1
		184 => "1001000100111100",		-- jmp 	factorial
		185 => "0010111000000001",		--	subl		r6,1
		186 => "0000001000001010",		--	set		r2,10
		187 => "1011111000001010",		--	setm r6,	r2,0,1
		188 => "1011111000001000",		--	setm r6,	r0,0,1
		189 => "1100110100000000",		--	getpcl r5
		190 => "1101010000000000",		-- getpch r4
		191 => "0001110100001000",		--  addl r5,8
		192 => "1011000011000010",		-- jnov pushret_mangled_tempfile3.asm_107
		193 => "0001110000000001",		-- addl r4,1
		194 => "1011111000001100",		-- setm r6,r4,0,1
		195 => "1011111000001101",		-- setm r6,r5,0,1
		196 => "1001000110010100",		-- jmp 	uart_print_u8
		197 => "0010111000000010",		--	subl		r6,2
		198 => "0000010100001101",		--	set r5,	0x0D		
		199 => "1011111000001101",		-- setm r6,r5,0,1
		200 => "1100110100000000",		-- getpcl r5
		201 => "1101010000000000",		-- getpch r4
		202 => "0001110100001000",		--  addl r5,8
		203 => "1011000011001101",		-- jnov pushret_mangled_tempfile4.asm_109
		204 => "0001110000000001",		-- addl r4,1
		205 => "1011111000001100",		-- setm r6,r4,0,1
		206 => "1011111000001101",		-- setm r6,r5,0,1
		207 => "1001000110000000",		-- jmp send_uart_char
		208 => "0010111000000001",		-- subl r6,1		
		209 => "0000010100001010",		--	set r5,	0x0A		
		210 => "1011111000001101",		-- setm r6,r5,0,1
		211 => "1100110100000000",		-- getpcl r5
		212 => "1101010000000000",		-- getpch r4
		213 => "0001110100001000",		--  addl r5,8
		214 => "1011000011011000",		-- jnov pushret_mangled_tempfile4.asm_110
		215 => "0001110000000001",		-- addl r4,1
		216 => "1011111000001100",		-- setm r6,r4,0,1
		217 => "1011111000001101",		-- setm r6,r5,0,1
		218 => "1001000110000000",		-- jmp send_uart_char
		219 => "0010111000000001",		-- subl r6,1		
		220 => "1001000001111011",		--	jmp		main_loop
		221 => "0010111000000011",		--	subl r6,3
		222 => "1100000000000110",		--	getm r0,r6,0,0 
		223 => "0010111000000001",		--	subl r6,1
		224 => "1100000100000110",		--	getm r1,r6,0,0 
		225 => "0010111000000001",		--	subl r6,1
		226 => "1100010100000110",		--	getm r5,r6,0,0 
		227 => "0010111000000001",		--	subl r6,1
		228 => "1100010000000110",		--	getm r4,r6,0,0 
		229 => "0001111000000110",		--	addl r6,6
		230 => "0000001000000000",		--	set r2,0
		231 => "0001000100000100",		--	add r1,r4
		232 => "1010100011101010",		--	jov add16_lo_ovflw
		233 => "1001000011101110",		--	jmp add16_add_hi_bytes
		234 => "0001100000000001",		--	addl r0,1
		235 => "1010100011101101",		--	jov add16_hi_ovflw_1
		236 => "1001000011101110",		--	jmp add16_add_hi_bytes
		237 => "0000001000000001",		--	set r2,1
		238 => "0001000000000101",		--	add r0,r5
		239 => "1010100011110001",		--	jov add16_hi_ovflw_2
		240 => "1001000011110010",		--	jmp add16_exit
		241 => "0000001000000001",		--	set r2,1
		242 => "0010111000000001",		--	subl r6,1
		243 => "1100010100000110",		-- getm r5,r6,0,0
		244 => "0010111000000001",		-- subl r6,1
		245 => "1100010000000110",		-- getm r4,r6,0,0
		246 => "1101110000000101",		-- setpc r4,r5
		247 => "1011111000001010",		--	setm r6,r2,0,1
		248 => "0010111000000100",		--	subl r6,4
		249 => "1100000000000110",		--	getm r0,r6,0,0 
		250 => "0010111000000001",		--	subl r6,1
		251 => "1100000100000110",		--	getm r1,r6,0,0 
		252 => "0010111000000001",		--	subl r6,1
		253 => "1100001000000110",		--	getm r2,r6,0,0 
		254 => "0001111000000110",		--	addl r6,6
		255 => "0111101000001000",		--	cmpl 	r2,8
		256 => "1010100100000101",		--	jov		lsl16_shift_less_than_half
		257 => "0000100000000001",		--	mov 	r0,r1
		258 => "0000000100000000",		--	set 	r1,0
		259 => "0011000000000010",		--	lsl 	r0,r2
		260 => "1001000100001100",		--	jmp 	lsl16_exit
		261 => "0011000000000010",		--	lsl 	r0,r2	
		262 => "0000010100001000",		--	set 	r5,8
		263 => "0010010100000010",		--	sub 	r5,r2	
		264 => "0000110000000001",		--	mov 	r4,r1
		265 => "0011110000000101",		--	lsr 	r4,r5	
		266 => "0110000000000100",		--	or 		r0,r4
		267 => "0011000100000010",		--	lsl 	r1,r2
		268 => "0010111000000001",		--	subl r6,1
		269 => "1100001000000110",		-- getm 	r2,r6,0,0
		270 => "0010111000000001",		--	subl r6,1
		271 => "1100010100000110",		-- getm r5,r6,0,0
		272 => "0010111000000001",		-- subl r6,1
		273 => "1100010000000110",		-- getm r4,r6,0,0
		274 => "1101110000000101",		-- setpc r4,r5
		275 => "0010111000000011",		--	subl	r6,3
		276 => "1100010000000110",		--	getm	r4,r6,0,0
		277 => "0010111000000001",		--	subl	r6,1
		278 => "1100010100000110",		--	getm	r5,r6,0,0
		279 => "0001111000000100",		--	addl	r6,4
		280 => "0000000000000000",		--	set 	r0,0
		281 => "1001000100011100",		--	jmp		mult_loop_cond
		282 => "0001000000000100",		--	add 	r0,r4
		283 => "0010110100000001",		--	subl	r5,1
		284 => "0111110100000000",		--	cmpl	r5,0
		285 => "1010000100011010",		--	jnz		mult_loop
		286 => "0010111000000001",		--	subl r6,1
		287 => "1100010100000110",		-- getm r5,r6,0,0
		288 => "0010111000000001",		-- subl r6,1
		289 => "1100010000000110",		-- getm r4,r6,0,0
		290 => "1101110000000101",		-- setpc r4,r5
		291 => "1011111000001010",		--	setm r6,r2,0,1
		292 => "0010111000000100",		--	subl	r6,4
		293 => "1100000100000110",		--	getm	r1,r6,0,0
		294 => "0010111000000001",		--	subl	r6,1
		295 => "1100001000000110",		--	getm	r2,r6,0,0
		296 => "0001111000000101",		--	addl	r6,5
		297 => "0111101000000000",		--	cmpl	r2,0
		298 => "1010000100101110",		--	jnz	div8_legal
		299 => "0000010000000000",		--	set r4,0
		300 => "0000010110000000",		-- set r5,0x80	
		301 => "1011110001000101",		-- setm r4,r5,1,0	
		302 => "0000000000000000",		--	set		r0,0
		303 => "1001000100110010",		--	jmp		div8_cond
		304 => "0001100000000001",		--	addl	r0,1
		305 => "0010000100000010",		--	sub		r1,r2
		306 => "0111001000000001",		--	cmp 	r2,r1
		307 => "1010100100110000",		--	jov		div8_loop
		308 => "1001100100110000",		--	jz		div8_loop
		309 => "0010111000000001",		--	subl r6,1
		310 => "1100001000000110",		-- getm r2,r6,0,0
		311 => "0010111000000001",		--	subl r6,1
		312 => "1100010100000110",		-- getm r5,r6,0,0
		313 => "0010111000000001",		-- subl r6,1
		314 => "1100010000000110",		-- getm r4,r6,0,0
		315 => "1101110000000101",		-- setpc r4,r5
		316 => "1011111000001111",		--	setm r6,r7,0,1
		317 => "0000111100000110",		-- mov r7,r6
		318 => "1011111000001010",		--	setm r6,r2,0,1
		319 => "0010111100000000",		--	subl r7,0
		320 => "0010111100000100",		-- subl r7,4
		321 => "1100000000000111",		-- getm 	r0,r7,0,0
		322 => "0001111100000100",		-- addl r7,4
		323 => "0001111100000000",		-- addl r7,0
		324 => "0000101000000000",		--	mov 	r2,r0
		325 => "1001000101010001",		--	jmp		factorial_loop_cond
		326 => "1011111000001000",		--	setm r6,r0,0,1
		327 => "1011111000001010",		--	setm r6,r2,0,1
		328 => "1100110100000000",		--	getpcl r5
		329 => "1101010000000000",		-- getpch r4
		330 => "0001110100001000",		--  addl r5,8
		331 => "1011000101001101",		-- jnov pushret_mangled_tempfile3.asm_286
		332 => "0001110000000001",		-- addl r4,1
		333 => "1011111000001100",		-- setm r6,r4,0,1
		334 => "1011111000001101",		-- setm r6,r5,0,1
		335 => "1001000100010011",		-- jmp mult8
		336 => "0010111000000010",		--	subl	r6,2
		337 => "0010101000000001",		--	subl	r2,1
		338 => "0111101000000010",		--	cmpl	r2,2
		339 => "1011000101000110",		--	jnov	factorial_loop
		340 => "0010111000000001",		--	subl r6,1
		341 => "1100001000000110",		-- getm 	r2,r6,0,0
		342 => "0000111000000111",		--	mov r6,r7
		343 => "0010111000000001",		-- subl r6,1
		344 => "1100011100000110",		-- getm r7,r6,0,0
		345 => "0010111000000001",		--	subl r6,1
		346 => "1100010100000110",		-- getm r5,r6,0,0
		347 => "0010111000000001",		-- subl r6,1
		348 => "1100010000000110",		-- getm r4,r6,0,0
		349 => "1101110000000101",		-- setpc r4,r5
		350 => "1011111000001000",		--	setm r6,	r0,0,1
		351 => "1011111000001001",		--	setm r6,	r1,0,1
		352 => "0010111000000101",		--	subl		r6,5
		353 => "1100000000000110",		--	getm		r0,r6,0,0
		354 => "0001111000000101",		--	addl		r6,5
		355 => "0000010000000010",		--	set r4,2
		356 => "0000010100000000",		-- set r5,0x00		
		357 => "1011110001000101",		-- setm r4,r5,1,0		
		358 => "0000010000000011",		--	set r4,3
		359 => "0000010111000011",		-- set r5,195
		360 => "1011110001000101",		-- setm r4,r5,1,0
		361 => "0000010000000010",		--	set r4,2
		362 => "0000010110000101",		-- set r5,0x85
		363 => "1011110001000101",		-- setm r4,r5,1,0
		364 => "0000010000000101",		--	set 		r4,5
		365 => "1001000101110101",		--	jmp			delay_ms_cond
		366 => "1100000101000100",		--	getm		r1,r4,1,0
		367 => "1000100100000001",		--	testl		r1,0x01
		368 => "1001100101101110",		--	jz 			delay_ms_loop
		369 => "1100000101000100",		--	getm		r1,r4,1,0
		370 => "1000100100000001",		--	testl		r1,0x01
		371 => "1010000101110001",		--	jnz 		delay_ms_wait_til_lo
		372 => "0010100000000001",		--	subl		r0,1
		373 => "0111100000000000",		--	cmpl		r0,0
		374 => "1010000101101110",		--	jnz			delay_ms_loop
		375 => "0010111000000001",		--	subl r6,1
		376 => "1100000100000110",		-- getm 		r1,r6,0,0
		377 => "0010111000000001",		--	subl r6,1
		378 => "1100000000000110",		-- getm 		r0,r6,0,0
		379 => "0010111000000001",		--	subl r6,1
		380 => "1100010100000110",		-- getm r5,r6,0,0
		381 => "0010111000000001",		-- subl r6,1
		382 => "1100010000000110",		-- getm r4,r6,0,0
		383 => "1101110000000101",		-- setpc r4,r5
		384 => "0010111000000011",		--	subl		r6,3
		385 => "1100010000000110",		--	getm		r4,r6,0,0
		386 => "0001111000000011",		--	addl		r6,3
		387 => "0000010100001100",		--	set 		r5,12
		388 => "1011110101000100",		--	setm 		r5,r4,1,0
		389 => "0000010000001010",		--	set r4,10
		390 => "0000010110000011",		-- set r5,0x83
		391 => "1011110001000101",		-- setm r4,r5,1,0
		392 => "0000010000001011",		--	set r4,11
		393 => "1100000101000100",		-- getm r1,r4,1,0
		394 => "1000100100000001",		--	testl		r1,0x01
		395 => "1010000110001000",		--	jnz			send_loop
		396 => "0000010000001010",		--	set r4,10
		397 => "0000010110000010",		-- set r5,0x82
		398 => "1011110001000101",		-- setm r4,r5,1,0
		399 => "0010111000000001",		--	subl r6,1
		400 => "1100010100000110",		-- getm r5,r6,0,0
		401 => "0010111000000001",		-- subl r6,1
		402 => "1100010000000110",		-- getm r4,r6,0,0
		403 => "1101110000000101",		-- setpc r4,r5
		404 => "1011111000001111",		--	setm r6,r7,0,1
		405 => "0000111100000110",		-- mov r7,r6
		406 => "1011111000001010",		--	setm r6,r2,0,1
		407 => "1011111000001011",		--	setm r6,r3,0,1
		408 => "0000001100000000",		--	set 	r3,0	
		409 => "0010111100000100",		--	subl	r7,4
		410 => "1100000000000111",		--	getm	r0,r7,0,0
		411 => "0010111100000001",		--	subl	r7,1
		412 => "1100001000000111",		--	getm	r2,r7,0,0
		413 => "0001111100000101",		--	addl	r7,5
		414 => "1011111000001010",		--	setm r6,r2,0,1
		415 => "1011111000001000",		--	setm r6,r0,0,1
		416 => "1100110100000000",		--	getpcl r5
		417 => "1101010000000000",		-- getpch r4
		418 => "0001110100001000",		--  addl r5,8
		419 => "1011000110100101",		-- jnov pushret_mangled_tempfile3.asm_61
		420 => "0001110000000001",		-- addl r4,1
		421 => "1011111000001100",		-- setm r6,r4,0,1
		422 => "1011111000001101",		-- setm r6,r5,0,1
		423 => "1001000100100011",		-- jmp div8
		424 => "0010111000000010",		--	subl	r6,2
		425 => "0111100100001010",		--	cmpl	r1,10
		426 => "1010100110101101",		--	jov		uart_print_u8_numeric_char
		427 => "0001100100110111",		--	addl	r1,0x37		
		428 => "1001000110101110",		--	jmp		uart_print_u8_char_converted
		429 => "0001100100110000",		--	addl	r1,0x30		
		430 => "1011111000001001",		--	setm r6,r1,0,1
		431 => "0001101100000001",		--	addl	r3,1
		432 => "0111100000000000",		--	cmpl	r0,0
		433 => "1010000110011110",		--	jnz	uart_print_u8_loop
		434 => "1001000110111101",		--	jmp		uart_print_u8_rev_cond
		435 => "1100110100000000",		--	getpcl r5
		436 => "1101010000000000",		-- getpch r4
		437 => "0001110100001000",		--  addl r5,8
		438 => "1011000110111000",		-- jnov pushret_mangled_tempfile3.asm_88
		439 => "0001110000000001",		-- addl r4,1
		440 => "1011111000001100",		-- setm r6,r4,0,1
		441 => "1011111000001101",		-- setm r6,r5,0,1
		442 => "1001000110000000",		-- jmp send_uart_char
		443 => "0010111000000001",		--	subl	r6,1
		444 => "0010101100000001",		--	subl	r3,1
		445 => "0111101100000000",		--	cmpl	r3,0
		446 => "1010000110110011",		--	jnz		uart_print_u8_rev_loop	
		447 => "0010111000000001",		--	subl r6,1
		448 => "1100001100000110",		-- getm 	r3,r6,0,0
		449 => "0010111000000001",		--	subl r6,1
		450 => "1100001000000110",		-- getm 	r2,r6,0,0
		451 => "0000111000000111",		--	mov r6,r7
		452 => "0010111000000001",		-- subl r6,1
		453 => "1100011100000110",		-- getm r7,r6,0,0
		454 => "0010111000000001",		--	subl r6,1
		455 => "1100010100000110",		-- getm r5,r6,0,0
		456 => "0010111000000001",		-- subl r6,1
		457 => "1100010000000110",		-- getm r4,r6,0,0
		458 => "1101110000000101",		-- setpc r4,r5

        
        others => "0000000000000000"
    );

begin
    process(clk)
    begin
        if(clk'event and clk='1') then
            instr <= prog_rom(to_integer(unsigned(pc)));
        end if;
    end process;
end Behavioral;
