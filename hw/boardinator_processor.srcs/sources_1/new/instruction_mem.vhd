

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
use IEEE.NUMERIC_STD.ALL;

entity instruction_mem is
    Port ( clk : in STD_LOGIC;
           pc : in STD_LOGIC_VECTOR (9 downto 0);
           instr : out STD_LOGIC_VECTOR (15 downto 0));
end instruction_mem;

architecture Behavioral of instruction_mem is

    type prog_mem_t is array (140 downto 0) of std_logic_vector(15 downto 0);
    signal prog_rom: prog_mem_t :=
    (    
				0 => "0000010000001010",		--	set r4,10
		1 => "0000010110000000",		-- set r5,0x80	
		2 => "1010010001000101",		-- setm r4,r5,1,0	
		3 => "0000000001101000",		--	set 		r0,0x68	
		4 => "1010011000001000",		--	setm r6,		r0,0,1
		5 => "1011010100000000",		--	getpcl r5
		6 => "1011110000000000",		-- getpch r4
		7 => "0001110100001001",		--  addl r5,9
		8 => "1001100000001010",		-- jovf inc_upper_mangled_tempfile3.asm_16
		9 => "0111000000001011",		--  jmp pushret_mangled_tempfile3.asm_16
		10 => "0001110000000001",		-- addl r4,1
		11 => "1010011000001100",		-- setm r6,r4,0,1
		12 => "1010011000001101",		-- setm r6,r5,0,1
		13 => "0111000001010010",		-- jmp 		send_uart_char
		14 => "0010111000000001",		--	subl		r6,1
		15 => "0000000001100100",		--	set 		r0,100
		16 => "1010011000001000",		--	setm r6,		r0,0,1
		17 => "1011010100000000",		--	getpcl r5
		18 => "1011110000000000",		-- getpch r4
		19 => "0001110100001001",		--  addl r5,9
		20 => "1001100000010110",		-- jovf inc_upper_mangled_tempfile3.asm_21
		21 => "0111000000010111",		--  jmp pushret_mangled_tempfile3.asm_21
		22 => "0001110000000001",		-- addl r4,1
		23 => "1010011000001100",		-- setm r6,r4,0,1
		24 => "1010011000001101",		-- setm r6,r5,0,1
		25 => "0111000001011111",		-- jmp 		delay_ms
		26 => "0010111000000001",		--	subl 		r6,1
		27 => "0000010000001100",		--	set r4,12
		28 => "0000010101101001",		-- set r5,0x69	
		29 => "1010010001000101",		-- setm r4,r5,1,0	
		30 => "0000000001100100",		--	set 		r0,100
		31 => "1010011000001000",		--	setm r6,		r0,0,1
		32 => "1011010100000000",		--	getpcl r5
		33 => "1011110000000000",		-- getpch r4
		34 => "0001110100001001",		--  addl r5,9
		35 => "1001100000100101",		-- jovf inc_upper_mangled_tempfile3.asm_27
		36 => "0111000000100110",		--  jmp pushret_mangled_tempfile3.asm_27
		37 => "0001110000000001",		-- addl r4,1
		38 => "1010011000001100",		-- setm r6,r4,0,1
		39 => "1010011000001101",		-- setm r6,r5,0,1
		40 => "0111000001011111",		-- jmp 		delay_ms
		41 => "0010111000000001",		--	subl 		r6,1
		42 => "0000010000001010",		--	set r4,10
		43 => "0000010100000000",		-- set r5,0x00
		44 => "1010010001000101",		-- setm r4,r5,1,0
		45 => "0000010000100000",		--	set r4,0x20
		46 => "0000010100000001",		-- set r5,0x01
		47 => "1010010001000101",		-- setm r4,r5,1,0
		48 => "0000001011111010",		--	set 		r2,250
		49 => "0000010000100010",		--	set r4,0x22
		50 => "0000010100000001",		-- set r5,0x01
		51 => "1010010001000101",		-- setm r4,r5,1,0
		52 => "1010011000001010",		--	setm r6,	r2,0,1
		53 => "1011010100000000",		--	getpcl r5
		54 => "1011110000000000",		-- getpch r4
		55 => "0001110100001001",		--  addl r5,9
		56 => "1001100000111010",		-- jovf inc_upper_mangled_tempfile3.asm_43
		57 => "0111000000111011",		--  jmp pushret_mangled_tempfile3.asm_43
		58 => "0001110000000001",		-- addl r4,1
		59 => "1010011000001100",		-- setm r6,r4,0,1
		60 => "1010011000001101",		-- setm r6,r5,0,1
		61 => "0111000001011111",		-- jmp 	delay_ms
		62 => "0010111000000001",		--	subl		r6,1
		63 => "0000010000100010",		--	set r4,0x22
		64 => "0000010100000000",		-- set r5,0x00
		65 => "1010010001000101",		-- setm r4,r5,1,0
		66 => "1010011000001010",		--	setm r6,	r2,0,1
		67 => "1011010100000000",		--	getpcl r5
		68 => "1011110000000000",		-- getpch r4
		69 => "0001110100001001",		--  addl r5,9
		70 => "1001100001001000",		-- jovf inc_upper_mangled_tempfile3.asm_48
		71 => "0111000001001001",		--  jmp pushret_mangled_tempfile3.asm_48
		72 => "0001110000000001",		-- addl r4,1
		73 => "1010011000001100",		-- setm r6,r4,0,1
		74 => "1010011000001101",		-- setm r6,r5,0,1
		75 => "0111000001011111",		-- jmp 	delay_ms
		76 => "0010111000000001",		--	subl		r6,1
		77 => "0000010000001010",		--	set r4,10
		78 => "0000010100000000",		-- set r5,0x00	
		79 => "1010010001000101",		-- setm r4,r5,1,0	
		80 => "0111000000110001",		--	jmp			blink_loop
		81 => "0111000001010001",		--	jmp			end	
		82 => "0010111000000011",		--	subl		r6,3
		83 => "1010110000000110",		--	getm		r4,r6,0,0
		84 => "0001111000000011",		--	addl		r6,3
		85 => "0000010100001100",		--	set 		r5,12
		86 => "1010010101000100",		--	setm 		r5,r4,1,0
		87 => "0000010000001010",		--	set r4,10
		88 => "0000010110000001",		-- set r5,0x81
		89 => "1010010001000101",		-- setm r4,r5,1,0
		90 => "0010111000000001",		--	subl r6,1
		91 => "1010110100000110",		-- getm r5,r6,0,0
		92 => "0010111000000001",		-- subl r6,1
		93 => "1010110000000110",		-- getm r4,r6,0,0
		94 => "1100010000000101",		-- setpc r4,r5
		95 => "1010011000001000",		--	setm r6,	r0,0,1
		96 => "1010011000001001",		--	setm r6,	r1,0,1
		97 => "0010111000000101",		--	subl		r6,5
		98 => "1010100000000110",		--	getm		r0,r6,0,0
		99 => "0001111000000101",		--	addl		r6,5
		100 => "0000010000000010",		--	set r4,2
		101 => "0000010100000000",		-- set r5,0x00		
		102 => "1010010001000101",		-- setm r4,r5,1,0		
		103 => "0000010000000011",		--	set r4,3
		104 => "0000010111000011",		-- set r5,195
		105 => "1010010001000101",		-- setm r4,r5,1,0
		106 => "0000010000000010",		--	set r4,2
		107 => "0000010110000011",		-- set r5,0x83
		108 => "1010010001000101",		-- setm r4,r5,1,0
		109 => "0000010000000101",		--	set 		r4,5
		110 => "0111000001111010",		--	jmp			delay_ms_cond
		111 => "0000010100000001",		--	set 		r5,1
		112 => "1010100101000100",		--	getm		r1,r4,1,0
		113 => "0100100100000101",		--	and			r1,r5
		114 => "0110000100000001",		--	cmpl 		r1,1
		115 => "1000000001110000",		--	jne			delay_ms_loop
		116 => "1010100101000100",		--	getm		r1,r4,1,0
		117 => "0000010100000001",		--	set 		r5,1
		118 => "0100100100000101",		--	and			r1,r5
		119 => "0110000100000001",		--	cmpl 		r1,1
		120 => "0111100001110100",		--	jeq			delay_ms_wait_til_lo
		121 => "0010100000000001",		--	subl		r0,1
		122 => "0110000000000000",		--	cmpl		r0,0
		123 => "1000000001110000",		--	jne			delay_ms_loop
		124 => "0010111000000001",		--	subl r6,1
		125 => "1010100100000110",		-- getm 		r1,r6,0,0
		126 => "0010111000000001",		--	subl r6,1
		127 => "1010100000000110",		-- getm 		r0,r6,0,0
		128 => "0010111000000001",		--	subl r6,1
		129 => "1010110100000110",		-- getm r5,r6,0,0
		130 => "0010111000000001",		-- subl r6,1
		131 => "1010110000000110",		-- getm r4,r6,0,0
		132 => "1100010000000101",		-- setpc r4,r5

        
        others => "0000000000000000"
    );

begin
    process(clk)
    begin
        if(clk'event and clk='1') then
            instr <= prog_rom(to_integer(unsigned(pc)));
        end if;
    end process;
end Behavioral;
